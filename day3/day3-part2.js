const puzzleInput = [
  "rGnRRccfcCRFDPqNWdwWJWRBdB",
  "jZzVVSZSjmQvZTSZfjmLzNPJqWtJBwqpNtBpdWdNvd",
  "fZfjlMLVshMFhcHnDG",
  "vJRmRfJbfRfJsCpvgLggNVsv",
  "zlzSrMPZMgBFFMNMVWsjsF",
  "dzBSBlzdcggRGdndnn",
  "hNwqVDVDdmQwQPrbDMSSMRSWSM",
  "LvnzJJtlcHstlffCVpMSbRMpBMbCgVWM",
  "lGvvscLHcfsHtvlsnZmmNGhNFVQqqTdqFd",
  "sHGzGsfcZnHfhbLRFrdrhRFf",
  "vwVqzSSjSSttjSqgNMqwzSSVCCgRPhPhFLdCRLLrdCRRrDLb",
  "vvwwtvvVwSvMQzjvmNtJsHBnsZllmnnTBBcBlTnW",
  "pzNVBVplhfLfVfVStZrZHbQHZQTb",
  "sdPPJdCjbdQHMTWt",
  "ngmJGFjJwJCmGcnJcFtgwcDBNLlqfBpvfBpqllhlfL",
  "TGpphMZhJQpGLZTMCCtsBMCSDsStBFcB",
  "jdfgHClHrdrbWvWgjqmctSDqltDsFFDFBc",
  "dNWWvfgCLzzNNLZz",
  "vvHzBrTSvHFbqZqZTBBtzdVfGCGhJSfGJGDSdGMhVG",
  "lgmgslssslscsnRlVGWGWGVMRCll",
  "pQPsjwnNgQmnNNwQgNLNnmgZqvFqtwqtrMMzvzwFtrqTrr",
  "TNhNLTrswwsnFNrrGZVnJnZmVpSjjVDnPp",
  "dBlzzCBqgfWMBpPSJDHVZSVP",
  "cqzfpcdcNFFGrhcb",
  "LLpzCzSzJnLQVnTNhQ",
  "vtDqwBcRztQbthtV",
  "qZZZqZvvsZwwjvjDjspFlPpSSCslpzPlls",
  "rsZVlmStlFZllvmSSvLRqcGMswMMzjMsjqGCjzMG",
  "VTPgQBQdBCwgjCnJGC",
  "pBNTNHdbdWLrDVLbDmLZ",
  "CFmsmwnCRmjCjnCzJZQhhBGQBsMzbP",
  "WvltTWVDdNttdlDbbZzJvPJvBBhhzM",
  "gHDfTNlDDdgVNdglgfqtpcSFwccCmmwnRSwzzHHF",
  "hgmhWgCdzpjPCzFC",
  "NVfgffZblZQVNtFZPntPDrJjPt",
  "TwbQLLfMgdhswWGH",
  "JStSPHPJNrBCtBZMPtHTVfVwLcbbLTcSgfbVfn",
  "GdhhCplmdWbVddLV",
  "qpFvhQppFRlqmFGppRhqvvFzZtQMHZMzBNBCCzNDHHMPzB",
  "MvCMQmJCMDQjwMJCSJpQmDcnGBggfsgljGNslsNGjTHTNf",
  "HRPtRRzVWWFhrFdZhTGlTTLLggBLVgGGLf",
  "zZhdWZPWRdqttWWRPzRPmcpmpQqvvSCvwHwQmJqD",
  "NwrVVWrvwtQDRdRqWbqh",
  "jCCZjlJZZGclGPpCJlcCBhJshgqTsQgbDdshTbgLRh",
  "ppppflPZlpvfffFzHqFV",
  "VmTwGVwnwHnSnqGSVmBBwwmTZvzbCrsNWcsZsqFzCWsbWrNv",
  "JMPPgRDPDgghJggtzsMbZvsNCrWcNsbM",
  "DhgJllPPJcgJpptDDDPldpmTwjHBmSjBBwmBwHBdBmTQ",
  "vblvFHvrQTjqqhCpFwLnFL",
  "RDJRWsdRdgdWZMCMQSVppMJpVL",
  "DzsgRNNsftWdQmcvbPcfcBfj",
  "wTgbsTmgqSbzSlSvFb",
  "rNdDdZnRtJFlmVSHZz",
  "mfNjjmmdNWhWCsffwC",
  "LltBNFLHHcJcfNdNTwbbNsfW",
  "vQSMCzQSGdSdvjsTwmwfwWwV",
  "nRCSzMCQDqlgdlRJHJ",
  "vgqTGwnhpLFsVvrR",
  "ZZzTHlTlJNbcLfRtppFzfs",
  "PlWBWbjQjJgCDCMPTTGT",
  "wtBdWdDpjDdwScBtnsFsPmmnPbPHHPghhh",
  "fSSVGVzlTlqGfffLTQMGHsmFsbmPFbsPbhQZFhhs",
  "TzLzfqJTVRGvRMvqvLGzMqRfSvcDpNjcjdcwSDBDtBDvSCDj",
  "FrdCCzmqFrpDRTRHRLnQJJnr",
  "SGfNRWlBZlgtRltGbvnTVbJnSHvLHVbH",
  "NRWsfWBwwqwDMDpc",
  "vSfsmsdssdjSdZdSgRnmLRGNzgGnqwwB",
  "VrlThFPTPjHFDPRqGGnRnNLqqqHG",
  "lPtTDVCCDrjppfdSQbcJMsbftv",
  "RFFslstRRfSljtsRJPjRtRtngSHbmbbhGbHQQmgbmgGhGQ",
  "DqBZdWZvTdMBBTLDzqBhFnvgVhnHHFbnQVnGnb",
  "wcwMMMTzZwsjtCtjFN",
  "CsscSlwwZDscMNhhpZhRZHRM",
  "VjQvjbQvbhJVbvTbnQTnHHLrRFRqqFqFVdMHNHNH",
  "QbTjjbtJnvttntjgjJjPDwwsBsSsSlslhlwwPCBS",
  "RLjhhBBcNNBNhNjhpwScwSCTFwcFvMwvlc",
  "dJqPJqbqtmgmgdPrdgwvDTCSSlMSFDlFTzFg",
  "stCCqmbGrrbmPsqZhHhpjjNhfjBnnsnp",
  "LfDzcMMVsDLLzNscGhFFcQhlhhBRll",
  "ZCbSbwdmwPnPnPmHjdjWFWsWhdGjdH",
  "bZnPbvnvqCvJDrLJNssf",
  "bbldQHVltHQSSJJmTlwJGjCjCChchgMhHhprCpMv",
  "WNPDFfqfzFsBFFnmgjGhgccjpcpgMGrs",
  "mZFFzDnmzBBZltdlZSVtZS",
  "hdJZZdJTvnJmRphvvpGnwvqzVFSwVlHVlFHFHNlzlgFgHF",
  "QWWWBbrCCrtjQsMdcWMBfttHsgFHVHgFSNzDzFlVLggHzz",
  "jQdBPCtrtcPcMQCTnqnhTvPGGvnJGR",
  "ZhsmsbNVmFssmblMMpdvvQdwLQRppRvQ",
  "GjnNNGNCGjfJcqrQDvQQpvQLPpnQQw",
  "BJjWqWSCrNHrqjfhlHzlVbVtFmtHTV",
  "mtJmPmQBbPFshnJzZpLZ",
  "gMqMHRGrCHSvrRGrqPZLnplFzlVhFspL",
  "RrDrgMGRDPNtfmDN",
  "wqqvqVmlpqchqrDD",
  "gzRltSjgFlWshrdngrpPcDcd",
  "RRjtsbGfGLbsLWSLtjzGSHNNHmHBwNNHNmNfllwVfl",
  "mqFBQgnMQQbJqnTswSMNWGsDswZZ",
  "HgzlRzHccfHsfTwSWfNSNf",
  "VLldvpHLVHrFJFJgpnQbJn",
  "SzCJtLdDCCtqCcdDfZMVMfGVbsVZPPzz",
  "wpwWQWjQgwQgjNBwgHQgsGfPfbPsZPGSPjZmrPrV",
  "QFwpTwpHlnHFNFWQWlQgNwNLCddvDShtLJnSJCLqJJttDt",
  "HMgCVHggtqMMvjgNjNCMMwfWfPwWPJQQNzWwJzlQlQ",
  "bGFrqrFGZLLdFmSPcmPzQJlQcWzJmJ",
  "hRphhShnLGFdGSFSLRGrdqdqsjTtsBTVTTBnVjVvHHBtHggt",
  "hHhnFHQpcFcHjcjfZfZRnjjnNNBvNNNtwvNtbwPtNcPtBgbg",
  "zzVLWCHLSdCttbvw",
  "mMLsHDMVFlRhhmhm",
  "MHMgBNQQPCMMQBbBQQgJHbWttdlfWpZJVWtGGztfWJZW",
  "nvLzDTDFDFqSqncTFddLGfWfssVWWVdlGs",
  "njScSmcnFDDhnmcmnSBzMggjjMQrQCjBQrwH",
  "MFVFHqhHHfVVSGcVQCLttttWTtLQ",
  "BgdJJrJzbGpLssCtTLLCpC",
  "PGBGdjjllBGBjhmhHRlmSfhRDF",
  "BLJmWwBJDDmLDFnVPzvTttvNhNFsHhvvQH",
  "cjbSqfWbRrbSzNMjhtNzzTsT",
  "dRdbgflfqmWggGmwWW",
  "lBTTnDMnNwWdpwMllTMDdTBTSRJjRRcSJRhRGhwtccScgjtg",
  "vvsnCVnHHnsvPzLfVJjtShgGJGVJSc",
  "zQQvzCZbsnbHCWMdFpMqblBqND",
  "CLggQjStSQjLgVRfhBRztwpBpt",
  "DNVmJDFcGNGlmNDnGFnsGcDdwzzZwZPsBPZZhhfBTpwhPfZh",
  "DMDccrnrdnDJcJGFGmCqbLvQqHVSSQVMCgHV",
  "rZVNNDrCFCbjbRSgjhZv",
  "czcMTcGMlcjjvvvGdhbb",
  "pHMpHtLWHHHztMzsvqvnVqNvsnNDqW",
  "hPhPBQVjzjQScjChRVVVsdfbvdmvvpGmvfdbff",
  "nwZwZWNTrwLTTDtbfmHDpGccstDv",
  "FLFJNllFrwTgTwNLnwTlFPhcjjhRhSMSjjBPhzJPQq",
  "CgJCHgJfHzGrrMjJpl",
  "SWqQLSQqdFSLrrCSZrvpzjMM",
  "QLWqhFLQdwFqnPbHcCHPbhCh",
  "jLplfcfjQfptPtLTTtPrRqCCCjZvhBhwhDjwhBBBqC",
  "msznRWgSmmHbSJwDvvBqCCqWFF",
  "mzdsVnbbSSznmbGgGSmTclPcrQffdLfMTLRLtl",
  "PpQQFdNFBtdsFNNPPthTtldwGMnZVvmbbVGbMwrGvG",
  "wHWRJDjHHRgJDZlmVZmnvDbDDM",
  "JqJfgRWLSqWJfcsBfwPpPwFpNwfC",
  "SjpVgjghVZvssgsHjQfHcfcnfNcnbqcRbr",
  "WBtNWTWNJnCTCbRbQR",
  "FlWGtwPJmJPBmwFtMGmpNhDSSSgZhSszzghsMD",
  "fSfzvQSbbSSSTQQzDQTzHsqHmjHVFsjqVJsbrrLs",
  "GWZncGGdBwlPGPJcGlBcPgNGqLqmjsHMVLrrVMwjsMMssLmr",
  "ltGWNggZJnCRhDtzvtTt",
  "zzSHMgsPWzLSJQMMWQWLJBLVqcmVrzmvcpFcqmqpmFprFV",
  "TlDnwhDblbnbbtbjdpVCrmFVDgmprcRCcF",
  "hTdjgdldgdfZWWGGHQJHWZQH",
  "TZVsSRGsGMGWZTvpmrgcMCmrwwFFgF",
  "BDPPnDDLDqDFLNLgctLNrm",
  "PzDPfHPdDPdJPfdHJqdbnnSVvRvsjZSvbsrRGhvGRhTG",
  "nnghnhLhgdVqSPLHcPHPNtpmrRptNt",
  "DwvMWlsJlGzsGMlvsZcWWbRrNHNtZtHttHNTNttTrTTR",
  "DDzDcwlWWGlcsszGwBCggFqgghCBfqCFdhSh",
  "GzgQpJnwgJfbSWpSvqtvlBtmSLmLlvLS",
  "zCHsRZjHdzVPRFNlLlvtlNMNNrtDrt",
  "zzZVsCcCCHzRhcbpwGJGGpcf",
  "lVQMrwlMwwMCBZmFtthmVmsgWhTL",
  "bdzHSSFJcvzcpFDptsDDmhTgLmnmmmhT",
  "SFpcGvdpddvGlBPZMCGrBZ",
  "QmQTQTFTSQPNbsPjPnntZjjnnDlBBB",
  "JHqJqhfCJpWfpHchRzzCnGBjtjDZltsZpljGntrr",
  "chdMHqHcMhWMfRczMJmmQsVTSNbNNFbdQNST",
  "HHdFqqDRdNsHfNRsjWPCBcCCZPwDCZVBVc",
  "lhlgprMrlprbplzwZQPwwPjbZZCPwP",
  "lpljllTGGGglhThpjSvdssSnfRRTdRnvsN",
  "sDzjCqLLzddjsdRsSShgmtnCgFnmnffmmFcf",
  "rJbqJMTqJGVTrgnFmfhcfmnJgm",
  "GQbBWZGbVrqpqWpZZHlwDsDsRsdDlDRDBDsD",
  "LbLbvbhQgblwwqbjGG",
  "cFTTMsczJsTWJFfNNlVqvDqjNvlFqZ",
  "mfMvJHvmdLgLRgpHRR",
  "cvhRpWWhpfpcTpWvRcRcWVNwsjNLJFsJjwLtMLdsdsLJjL",
  "ZZPqGqgZrllbbVMtnJtllwJtltnj",
  "rrPCSQHbbrSqHqqZGGQbvzBVTpfzmvBvcvRCTpzT",
  "VMzNNhWVlrbJHbjcJCjCSR",
  "qgtDBgBtTGjqJvSPRJHCqHcd",
  "GfnfLjjgGLmgBWpWrMMnzWZppl",
  "zRtfBftCvvPSvPclZgcgJznWcgnq",
  "dDpGpVdwdGphbDMpdQhnJjjqnZQWnZNcNWlqlJ",
  "wdFdTDpGDSCmTtRqRq",
  "bTGrRzjbmbmqsGDDjHPpWpfjHJZFVPJp",
  "LwdwNNgMLfZTdCHPPd",
  "lhtwtvttgnchcsrvmzTvmsTbbm",
  "dfLjdlqLtqpbpPQpHS",
  "ZGJnFZFDpBWWGBTzzrhmhHzHQPFPvQ",
  "NgJGGGNGnJWgMDWGgDpWnZWgwdRCtwCCRVLdjwVcccdwct",
  "MMtzRCTnVVnHbbMNrHMRRVQJFrPPDsrsJgjjQGJGpFFF",
  "ZcqWqdfcmfhwDgGpDJmmQDQs",
  "LhwBddvlddvdLCgCtCTzgzMN",
  "ZffpWcfPcPrTwlVCvDhhcS",
  "GMLBNHjMBGtmjtMQMJjLHTwwsSswdslhGwDhsDvCvV",
  "tQgNRHMHQggHjQttbZqfFqrnqSZWfPZR",
  "MDqbPdqGfwGbfMswqfJdPGgQpCZvQgmvJFCmQJQvRCQv",
  "WFthczzzrpWgpHlRRC",
  "BhLSFnFrcLzhtSFnSTznhGbMGwjGwjjPbGDqjdqTMd",
  "zbQdJbBPTsWcCgdmfC",
  "DNqZHjvwZMShDhwqvLmlgVnLmcnsfnVf",
  "HHSFSjNZFqjZrhQpPtzrBgQzPrpB",
  "BzzJHvJJvWsgzPPTWPSJsJgNtmMtNFlvNZFltFtttjmtVZ",
  "cbccGnqhwhdpqRnnrdqdntZVFfMCltMtGFCmtFNFlj",
  "wnlRRQbnpHQWHgSQTs",
  "SQQBFnPzSnQVSzFSWlzlBSWFMsqmMmzLLChTmmMqzsTChmss",
  "ZgdwrJdtJrgpcCwZNbbjsGhGDvMrrqmmMmDhTsqv",
  "NtRZwCbZbbjRZNJcRbjWVWPnWHQWVPBQnHlfRB",
  "jLtlpljLpsbRnDNtBpbjdqWcqChccbhqChqbWQbQ",
  "gVwwggvJJwBqgWqfBCgT",
  "VHZrPSHwzSwvDLnnLlsrDRBp",
  "GBDGDrhwVrFhVCVBvhhvwBDVcmlfcPcMMmmmqNTScNNNflSF",
  "RzRLRbddjZTbTQjJSWNzlNWNcPqNWqSf",
  "dHjRgddHnZngjHLnQsgZHbGrrVpwpTtThnDBppVCTpDp",
  "dpjwvdLwtvJszhmzhRVj",
  "QfFQrffPBCBZMQrMRWzmzmVWVghVLs",
  "GBPGBrFrHZTBSTqvvLNtqSpq",
  "zFcGnQcZPZncbbbhPncpNCwzvwmjMvwwmwmpvd",
  "tBRtdrRTJNvRjMMwRC",
  "rlWSqVtTHqtVTrngQnfbQFdcghgW",
  "RMjfvsbQPvvNpLmLprFJFrFJJT",
  "SqCtGCcZZCwcCqqcGdWGdSZmMTmnVBdLnTTgTrMgrgVLTB",
  "lGzGzHSCzHctsQRMsQPzDjNs",
  "FQTWdTVMDWWVWFDTFcVcWJqTlCCCSlFmtCmNZStsmFmCwCgm",
  "nPLbGZzrgwBlbBlS",
  "PppGRnzPnpzvZVDJVvTfDVVVdD",
  "CQlDsWWfflWDMMhRmTGqFwSjJFdqwSQJzF",
  "PgpVbZPcHgBcgZrBZcHNTTbdqTGjSqFjRFjwSjGG",
  "VvgRBBNLRrPhsfhLWLWDtW",
  "hHhZDcDcPZWpLZWpCQ",
  "pbqdwmbqqmBpdMsgdqjCGvfCWGTWLGmWfGQtVt",
  "wjjbsFBRbwFgMpDznPDrrFcShr",
  "zGmsJQsDBBmDDJJpRZzSqZZPRffWRSqh",
  "LQlVHjCCNCLRSgWlZnhPZW",
  "bLtHCHtjVHQDTJcGDQbs",
  "QPRlnHfPllgRfnqhcwgwGMGzBWzBBBBB",
  "LCtVCZtDbdttjZFtvjvdDMGGBmBWWZWBBWGSsWJSJm",
  "dFVNTVbTjMnHlThHnpHR",
  "hGhZLlqmqZWTcWrmWqrWmTrqjQVQwNHPgPwPPSgPjNwVSLjD",
  "bsMJBRMvRsvsJMRRbspFgQwSNNSNwVNjgwDMDgHH",
  "pFnFtvCQFsbBQzsBrmnTWchWZqWqWqGZ",
  "wpwlJdCWJWdzlWGRRcrDrwRqrqDFrF",
  "ZmPsSVnnTvmHDgFcDTHFTF",
  "smVvnSQhbsNsvsmsnQQclzGCWpphppLJCdJWBpll",
  "FfSmMJmBDfBjDSjFtBVmftBQPwPhPCbhQvbhwCCbvhhjhq",
  "ZnZHZgclJWNbwbcbcwPrQv",
  "ZNNGLHzHNZTTJnlFFfVmDBsFSVLdSD",
  "DDBvjMvBJMtWjNRNrvdtbshTdpssdPSgpFpP",
  "LwGQcwLGJTSssQbg",
  "wcfcCcmHfJmcLLVZVqBBBqWDRqBRDWzHNN",
  "LhnpcdcdrChplvllHptlgR",
  "TsSTSBqPBTGNzqGfzfffGfVtPlHHvMDtHtRMlvjHHgtv",
  "sBfWNGQmQbCgQhQn",
  "pnnHngqsRjstjRgtrBDlBwDgwDZBldlD",
  "SFvJMGhhvcbMSWPJbFzVDdzDZwDFlFlzfFBV",
  "JJNWGSWSMNMCPhcvMhGStwtjtRRtRRqRsCtQjqRj",
  "nQZfJswFffjJplqhlqZlVVhp",
  "vtdCvGdBCzVHgnzLDlpL",
  "BbCTGvtGnBBCPjrsccjrwbrFjj",
  "wjjvDQwWvSQDLbwfNrrJcMHrczcpWN",
  "tTnqlRsTRthFhnnpfNrmcTNMzfCzHr",
  "slsBGVlqghMRhsRlltsFDgQSDbQwPSPLQSZjPSLQ",
  "PcQmmQRQZRFQPjjDWhgCgWdM",
  "nBGtbGNBBGvJbbtpWhCNCjmMjHlWHDdM",
  "vbBnBBrrvVBtJJbvtzzptRQLLZLRFfqLSTSfzqwfqm",
  "PBFZDFPsDZBnTTBdDHSNSpNzmVTVmVGlNH",
  "WvqFLWQCMQLMRtQJFWQLvQCJVzmNjNzVCllVmGSlNHlVzljH",
  "WRtrhtWQWFbrrBwBZrbn",
  "MwWnMPnMPNswjPDvRbsblCGFZGZF",
  "JdJVVVtLdgZhvGVBDZhZ",
  "rqmdqtgcLQLTfWffwGGmmp",
  "QQhhWzQWsMhZjbbmffgfjrGDdfdGvv",
  "HnCJVHcnnHttCRVRCcnBCqJBGfPmTvTvdDfvqfrddNDDggGG",
  "wBwwcRBBCJpFcFcpnVVFQWQLSLbQZLmhzshMlMwQ",
  "CgDNbsDcHjTcgDCgjRHMJrlHFrBHFmrttrGGtFwG",
  "VfQJnvJdhvSJZphSzWpvSzZSltGGBllGBqPPFPrwrmfqtFFB",
  "VJLvdQhphhQnjLsjDDjDcRbL",
  "LjljTPdLdccLhcMZhTTMdzrrtzGgtvrgnttNDGrWtDgn",
  "hbCmCHqHmSbRgNrtvCgGgttN",
  "SJFJRFpHqwSFSpsHwbHwRhSJPTjMMMPdPlPLcVQscLVQQVlL",
  "QmTTQVqrVrMvbCwLczbRlQ",
  "sSNtNGZFjBSsjSSShcRvwCFLlzWcWRzCWv",
  "LLNjZhSGZBnjhJjjrrTgPqgPgTfqfJpf",
  "DCCjDDtHVptCtvMZlJbSnScWWfHlhW",
  "qsTFmTgmqRRLswQGmfWwSnZSSfJSSWZcWb",
  "dsmqgqdsNgTFLFRLGmRpBtBDtDNVpPCCfVrtpD",
  "LLNRhHhRbsNGjqCBPBrLCw",
  "lgcFfvWGTllzfJVVFVWDzFqqMrZCMBrZZqvSrCPZSSrr",
  "fFGGlTTTlzWQGzzDFttQmHnpnhtmmpRssm",
  "LZNnBgtlNZztzmGHmpHHPPPm",
  "QwjjQRCQScbFFFchhFrFjwmsNPHSSWJGsGppMSWMmWqs",
  "dQCwwbwhrjQQjCwRwbhRBlDDfBtVlnNnlgLdnvvd",
  "wRbGbqqGCwnGTRqBqlMVphpgMgMFdnFVnt",
  "cgzvssscgHJVdhDdhDMvDM",
  "PjcZcsJrJHWgrPBQmCqRBPSSRCSb",
  "rHBmLlPLlTzztvRtGsVL",
  "NWJJWWjJDJWWhphqwCFCwzvRVcgRtctRgNNVVscsGc",
  "hqCCsnCpCDnbCnWhwpbHbBHmMBMMmdPrZfdP",
  "GRPprPQdsprGpGgGTlqfVqnZLgnLnwNZLw",
  "CCWJMMvhhCvthtCjvDWFjMcCVZJLNnfqnllwzlzNnzzwVNnN",
  "cDtZFjDjcMCDDtZFSMCvvDpmsmSRRpmmbSpdPRdTmTsp",
  "mmPpsbZZbbzvzgbrZRPgPMWqtHtqDnGCnMWCDwGHwtwW",
  "cBFBNNccsTLjJjfcjfGDGQtWwFCnCGtqCCQH",
  "TNsTLJlffdldzvrmbmrPzp",
];

let groupsOfThree = [];
for (let i = 0; i < puzzleInput.length; i = i + 3) {
  groupsOfThree.push({
    [`group`]: [puzzleInput[i], puzzleInput[i + 1], puzzleInput[i + 2]],
  });
}

console.log(groupsOfThree);

const findCommonLetter = (string1, string2, string3) => {
  let letter = "";
  for (let i = 0; i < string1.length; i++) {
    let selectedLetter = string1[i];
    for (let j = 0; j < string2.length; j++) {
      if (selectedLetter === string2[j]) {
        for (let k = 0; k < string3.length; k++) {
          if (selectedLetter === string3[k]) {
            letter = selectedLetter;
          }
        }
      }
    }
  }
  return letter;
};

const findCommons = groupsOfThree.map((item, index) => {
  const triplet = item.group;
  console.log(item, triplet);
  const letter = findCommonLetter(triplet[0], triplet[1], triplet[2]);
  return { ...item, commonLetter: letter };
});

console.log(findCommons);

const alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

const lettersWithValues = alphabet
  .split("")
  .map((alpha, index) => ({ [alpha]: index + 1 }));
console.log(lettersWithValues);

const inputWithValues = findCommons.map((item, index) => {
  const keys = lettersWithValues.map((item) => Object.keys(item)).flat();
  const values = lettersWithValues.map((item) => Object.values(item)).flat();
  const valueIndex = keys.findIndex((letter) => letter === item.commonLetter);
  const value = values[valueIndex];
  return { ...item, letterValue: value };
});

const sum = inputWithValues.reduce((acc, value) => acc + value.letterValue, 0);

console.log(inputWithValues);
console.log(sum);
